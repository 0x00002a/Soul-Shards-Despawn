architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}
configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${libs.versions.fabric.loader.get()}"
    modApi "net.fabricmc.fabric-api:fabric-api:${libs.versions.fabric.api.get()}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:${libs.versions.architectury.get()}"
    modRuntimeOnly "mezz.jei:jei-${libs.versions.minecraft.get()}-fabric:${libs.versions.jei.get()}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${libs.versions.clothconfig.get()}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
}
