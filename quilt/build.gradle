plugins {
    //id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}
java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

def build_number = System.getenv('BUILD_NUMBER') != null ? System.getenv('BUILD_NUMBER') : 'CUSTOM'

group = package_group
archivesBaseName = project.archivesBaseName
version = "${project.version}-${libs.versions.minecraft.get()}"

repositories {
    maven {
        name = 'Quilt'
        url = 'https://maven.quiltmc.org/repository/release'
    }
}
architectury {
    platformSetupLoomIde()
    loader("quilt")
}
loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}
configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentQuilt.extendsFrom common
}

dependencies {
    modApi("dev.architectury:architectury-fabric:${libs.versions.architectury.get()}") {
        // We must not pull Fabric Loader from Architectury Fabric
        exclude group: "net.fabricmc"
        exclude group: "net.fabricmc.fabric-api"
    }
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionQuilt")) { transitive false }
    modApi libs.quilt.loader
    modApi libs.quilted.fabric.api
    modCompileOnly 'maven.modrinth:wthit:NmGfP3mL'
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}


processResources {
    inputs.property 'version', version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

def curseRelations = {
    requiredLibrary 'fabric-api'
}

/*
curseforge {
    if (project.hasProperty('curse_key_TehNut'))
        apiKey = project.curse_key_TehNut

    project {
        id = "${curse_id}"
        changelog = getChangelogText()
        releaseType = 'release'

        relations curseRelations

        addGameVersion "1.14.3"
        addGameVersion "Java 8"
        addGameVersion "Fabric"
        addArtifact sourcesJar
        addArtifact apiJar
        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))

        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }

    options {
        forgeGradleIntegration = false
    }
}*/

String getChangelogText() {
    def changelogFile = new File('changelog.txt')
    String str = ''
    String separator = '---'
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (lineCount < 3) {
            lineCount++
            if (it.startsWith(separator)) {
                return
            }
        }
        if (!it.startsWith(separator)) {
            str += "$it" + (lineCount < 3 ? ':\n\n' : '\n')
            return
        }
        done = true // once we go past the first version block, parse no more
    }
    return str
}
